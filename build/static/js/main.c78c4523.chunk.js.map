{"version":3,"sources":["coustomcomp/Navbar.js","coustomcomp/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","id","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","manu","role","onClick","modeClicked","for","TexForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","text2","setText2","htmlFor","value","onChange","event","target","rows","NewTxt","toUpperCase","itr","split","length","i","tmp","toLowerCase","charAt","slice","console","log","toLocaleLowerCase","b","toPrecision","defaultProps","App","mainMode","setMode","color","backgroundColor","mainModeStyle","setModeStyle","style","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c78c4523.chunk.js","sourcesContent":["import React from 'react'\r\n// import TextForm from './coustomcomp/TextForm';\r\nimport PropTypes from 'prop-types'\r\n// import { Outlet, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (  \r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \" id='navbarcoustom'>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>    \r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            {/* <a href=\"TextForm.js\">Home</a> */}\r\n            {/* <Link to=\"/\">Home</Link> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">{props.manu}</a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.modeClicked}/>\r\n          <label className=\"form-check-label text-white\" for=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    </>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    manu : PropTypes.string.isRequired\r\n  };\r\n    \r\nNavbar.defaultProps = {\r\n    title : 'Enter Your Title Here',\r\n    manu : 'Enter Manu Name Here'\r\n  };\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TexForm(props) {\r\n\r\n  const HendalOnClickfive = () =>\r\n  {\r\n    let a = 0;\r\n    let b = 0;\r\n    let itr = text.split(\" \").length;\r\n    for(let i = 0; i< itr ; i++)\r\n    {\r\n      if(text.split(\" \")[i].length>5)\r\n      {\r\n        a=a+1;\r\n      }\r\n\r\n      if(text.split(\" \")[i]===\"is\")\r\n      {\r\n          b=b+1;\r\n      }\r\n    \r\n      \r\n    }\r\n    setText2(a + \" Words Havae More Then Five Characters\");\r\n    setText2(b + \" is\");\r\n  } \r\n  const HendalOnClick = () =>\r\n  {\r\n    let NewTxt = text.toUpperCase();\r\n    setText2(NewTxt);\r\n\r\n  }\r\n  const HendalOnClicklo = () =>\r\n  {\r\n    let NewTxt = text.toLocaleLowerCase();\r\n    setText2(NewTxt);\r\n  }\r\n  const HendalOnClickcm = () =>\r\n  {\r\n    let NewTxt;\r\n    let itr = text.split(\" \").length;\r\n    for(let i = 0; i< itr ; i++)\r\n    {\r\n      if(i===0)\r\n      {\r\n        let tmp = text.split(\" \")[0];\r\n        tmp = tmp.toLowerCase();\r\n        NewTxt = tmp;  \r\n        \r\n      }\r\n      else{\r\n      let tmp = text.split(\" \")[i];\r\n      let tmp2 = tmp.charAt(0).toUpperCase();\r\n      tmp = tmp.toLowerCase();\r\n      NewTxt = NewTxt + tmp2 + tmp.slice(1);\r\n      }\r\n\r\n    }\r\n    console.log(NewTxt);\r\n    setText2(NewTxt);   \r\n  }\r\n  const HendalOnClickcl = () =>\r\n  {\r\n    let NewTxt =\" \";\r\n    setText2(NewTxt);\r\n    setText(NewTxt);\r\n  }\r\n  const HendalOnChange = (event) =>\r\n  {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const HendalOnChange2 = () =>\r\n  {\r\n    \r\n  }\r\n  const [text,setText] = useState(\"Enter text Here\"); \r\n  const [text2,setText2] = useState(\" \"); \r\n  \r\n  return (\r\n    <>\r\n    <h3 className=\"headingtxt\">{props.title}</h3>\r\n  <div className=\"mb-3\">\r\n  <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"></label>\r\n  <textarea className=\"form-control\" value={text} onChange={HendalOnChange} id=\"exampleFormControlTextarea1\" rows=\"15\"></textarea>\r\n  </div>\r\n  <div className=\"container-coustom\">\r\n    <button className=\"buttoncoustom\" onClick = {HendalOnClick}>Convert To Uppercase</button>\r\n    <button className=\"buttoncoustom\" onClick = {HendalOnClickcm}>Convert To Camelcase</button>\r\n    <button className=\"buttoncoustom\" onClick = {HendalOnClicklo}>Convert To Lowercase</button>\r\n    <button className=\"buttoncoustom\" onClick = {HendalOnClickfive}>Convert To five</button>\r\n    <button className=\"buttoncoustom\" onClick = {HendalOnClickcl}>Clear Text</button>\r\n  </div>\r\n  <div className=\"container\">\r\n    <h3 className=\"headingtxt my-3\">Your Text Summary</h3>\r\n    <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n    <p>{(0.3 * text.split(\" \").length).toPrecision(2)}s Take To Read</p>\r\n  </div>\r\n  <h3 className=\"headingtxt\">Output</h3>\r\n  <div className=\"mb-3\">\r\n  <label htmlFor=\"exampleFormControlTextarea1 my-10\" className=\"form-label\"></label>\r\n  <textarea className=\"form-control\" value={text2} onChange={HendalOnChange2} id=\"exampleFormControlTextarea1\" rows=\"15\"></textarea>\r\n  </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './coustomcomp/About'\nimport Navbar from './coustomcomp/Navbar';\nimport TextForm from './coustomcomp/TextForm';\n// import {createRoot} from 'react-dom/client';\nimport React , {useState}from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes, \n//   Route,\n// } from \"react-router-dom\";  \n\nfunction App() {\n//   const rootElement = document.getElementById('root');\n// const root = createRoot(rootElement);\n//   root.render(\n//     <Router>\n//       <App />\n//     </Router>\n//   )\n  \n  const [mainMode,setMode] = useState('white');\n  const [mainModeStyle,setModeStyle] = useState({\n        color: 'black',\n        backgroundColor: 'white'\n  });\n  const modeClicked = () => \n  {\n    console.log(\"clicked\");\n    if(mainMode === 'black')\n    {\n      setModeStyle({\n         color: 'black',\n         backgroundColor: 'white'\n    })\n    setMode('white');\n    }\n    else{\n      setModeStyle({\n      color: 'white',\n    backgroundColor: 'black'  \n    })\n    setMode('black');\n    }\n  }\n\n  return (\n    <>\n    <div className='mainPage' style={mainModeStyle}>\n      <div className=\"coustomnav\">\n          <Navbar title = \"TextWorker\"  manu = \"AboutUs\" modeClicked={modeClicked}/>\n      </div>\n      <div className=\"container\">\n          <TextForm title = \"Enter your Text Here\" mainMode={mainMode}/> \n      </div>\n    </div>\n    </> \n\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}